'PUMLAMR
'PUMLAPARENT: tempSys
@startuml
!include ./../../../pumla_macros.puml
!include ./../../../pumla_tagged_values.puml
'!include ./../modelrepo_json.puml

!if ($PUMVarShowBody)
'add block definition with internals here, e.g.:
component "Temperature Sensor B (dC)" <<block>> as tempSensorBdC {
    PUMLAPutTaggedValues(tempSensorBdC)
    ' the elements put here should have no or
    ' no other parent

    ' if you do not need the relation you could also do it with this:
    PUMLAPutInternalElement(tempSensorB)
    PUMLAPutInternalElement(tempConverter)
}
!endif

PUMLAAddTaggedValue(tempSensorBdC, "Vendor", "C Ltd.")


' define usage relation towards the internal elements
PUMLARelation(tempSensorBdC, "..>", tempSensorB, "use", "tempSensorBdCRel#1")
PUMLARelation(tempSensorBdC, "..>", tempConverter, "use", "tempSensorBdCRel#2")
PUMLARelation(tempSensorBdC, "..>", tempSensorB, "useForB3", "tempSensorBdCRel#3")
PUMLARelation(tempSensorBdC, "..>", tempConverter, "useForB3", "tempSensorBdCRel#4")

PUMLAAddTaggedValue("tempSensorBdCRel#1", "SysVariant", "B2")
PUMLAAddTaggedValue("tempSensorBdCRel#2", "SysVariant", "B2")
PUMLAAddTaggedValue("tempSensorBdCRel#3", "SysVariant", "B3")
PUMLAAddTaggedValue("tempSensorBdCRel#4", "SysVariant", "B3")


' define an interface and connect it
PUMLAPutInterface("temp_dC", temp_dC_tempSensorBdC, tempSensorBdC, "out")

' define connection between the internal elements interface and
' this element
PUMLAConnection(temp_dC_tempConverter, "--", temp_dC_tempSensorBdC, "", "C#2")
' define connection between both internal elements (their interfaces)
PUMLAConnection(temp_dF_tempSensorB, "--", temp_dF_tempConverter, "", "C#3")

!if ($PUMVarShowDescr)
note bottom of tempSensorBdC
    Temperature Sensor of company B
    combined with the converter to
    provide the temperature in degree
    Celsius.
end note
!endif

@enduml